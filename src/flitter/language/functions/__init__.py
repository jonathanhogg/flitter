
from ...model import Vector

from .color import colortemp, hsl, hsv, oklab, oklch
from .easing import cubic, linear, quad
from .maths import (absv, accumulate, acosv, angle, asinv, ceilv, cosv, expv, floorv, fract, length, log10v, log2v, logv,
                    mean, polar, product, roundv, sinv, sqrtv, sumv, tanv)
from .misc import (chrv, clamp, count, cross, debug, dot, glob, hypot, inverse, lenv, mapv,
                   maxindex, maxv, minindex, minv, normalize, ordv, point_towards, qbetween, qmul, quaternion,
                   read_bytes, read_csv, read_text, sample, slerp, snap, sort, split, zipv)
from .random import beta, normal, shuffle, uniform
from .waves import bounce, impulse, sawtooth, sharkfin, sine, square, triangle


STATIC_FUNCTIONS = {
    'abs': Vector(absv),
    'accumulate': Vector(accumulate),
    'acos': Vector(acosv),
    'angle': Vector(angle),
    'asin': Vector(asinv),
    'beta': Vector(beta),
    'bounce': Vector(bounce),
    'ceil': Vector(ceilv),
    'chr': Vector(chrv),
    'clamp': Vector(clamp),
    'colortemp': Vector(colortemp),
    'cos': Vector(cosv),
    'count': Vector(count),
    'cross': Vector(cross),
    'cubic': Vector(cubic),
    'dot': Vector(dot),
    'exp': Vector(expv),
    'floor': Vector(floorv),
    'fract': Vector(fract),
    'hsl': Vector(hsl),
    'hsv': Vector(hsv),
    'hypot': Vector(hypot),
    'impulse': Vector(impulse),
    'inverse': Vector(inverse),
    'len': Vector(lenv),
    'length': Vector(length),
    'linear': Vector(linear),
    'log': Vector(logv),
    'log10': Vector(log10v),
    'log2': Vector(log2v),
    'map': Vector(mapv),
    'max': Vector(maxv),
    'maxindex': Vector(maxindex),
    'mean': Vector(mean),
    'min': Vector(minv),
    'minindex': Vector(minindex),
    'normal': Vector(normal),
    'normalize': Vector(normalize),
    'oklab': Vector(oklab),
    'oklch': Vector(oklch),
    'ord': Vector(ordv),
    'point_towards': Vector(point_towards),
    'polar': Vector(polar),
    'product': Vector(product),
    'qbetween': Vector(qbetween),
    'qmul': Vector(qmul),
    'quad': Vector(quad),
    'quaternion': Vector(quaternion),
    'round': Vector(roundv),
    'sawtooth': Vector(sawtooth),
    'sort': Vector(sort),
    'sharkfin': Vector(sharkfin),
    'shuffle': Vector(shuffle),
    'sin': Vector(sinv),
    'sine': Vector(sine),
    'slerp': Vector(slerp),
    'snap': Vector(snap),
    'split': Vector(split),
    'sqrt': Vector(sqrtv),
    'square': Vector(square),
    'sum': Vector(sumv),
    'tan': Vector(tanv),
    'triangle': Vector(triangle),
    'uniform': Vector(uniform),
    'zip': Vector(zipv),
}

DYNAMIC_FUNCTIONS = {
    'debug': Vector(debug),
    'sample': Vector(sample),
    'glob': Vector(glob),
    'csv': Vector(read_csv),
    'read': Vector(read_text),
    'read_bytes': Vector(read_bytes),
}
