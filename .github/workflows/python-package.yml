# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: ["main"]
    paths:
    - ".github/workflows/python-package.yml"
    - "pyproject.toml"
    - "setup.py"
    - "src/**/*"
    - "tests/*"
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=30 --max-line-length=160 --statistics
    - name: Install build dependencies
      run: |
        sudo apt-get install libasound2-dev libjack-jackd2-dev
    - name: Build wheel
      run: |
        python -m build
    - name: Install package
      run: |
        python -m pip install dist/flitter_lang-*.whl
    - name: Install test dependencies
      run: |
        sudo apt-get install mesa-utils xvfb
        python -m pip install pytest pytest-xvfb
    - name: Test with pytest
      run: |
        pytest
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:

    name: Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/flitter-lang
    permissions:
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
