
name: CI test

on:
  push:
    branches: ["main"]
    paths:
    - ".github/workflows/ci-test.yml"
    - "pyproject.toml"
    - "setup.py"
    - "src/**/*"
    - "tests/**/*"
    - "docs/**/*.fl"
    - "examples/**/*"
  pull_request:
    branches: ["main"]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt-get update
        sudo apt-get install libasound2-dev libjack-jackd2-dev
    - name: Build and install package
      run: |
        python -m pip install .
    - name: Install test dependencies
      run: |
        sudo apt-get install mesa-utils xvfb libfontconfig1
        echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections
        sudo apt-get install -y ttf-mscorefonts-installer
        python -m pip install pytest pytest-xvfb
    - name: Run all tests
      run: |
        pytest tests
    - name: Store the test generated images
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: test_linux-images-${{ matrix.python-version }}
        path: build/test_images/

  test-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Build and install package
      run: |
        python -m pip install .
    - name: Install test dependencies
      shell: cmd
      run: |
        python -m pip install pytest
        curl -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/24.0.2/mesa3d-24.0.2-release-msvc.7z
        "C:\Program Files\7-Zip\7z.exe" x mesa.7z
        .\systemwidedeploy.cmd 1
      working-directory: build
    - name: Run all tests
      run: |
        pytest tests
    - name: Store the test generated images
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: test_windows-images-${{ matrix.python-version }}
        path: build/test_images/
